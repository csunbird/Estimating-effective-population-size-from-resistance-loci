// Initialize parameters
defineConstant("NUM_COMBINATIONS", 27) 
defineConstant("NUM_GENERATIONS", 10000)

// Initialize arrays to store parameters
N_values = int[27]
mutation_rates = float[27]
recombination_rates = float[27]
burn_in_files = string[27]


// Read parameter combinations from parameter combinations.txt file
initializeParameters() {
    i = 0
    file = "parameter combinations.txt"
    for (line in file) {
        tokens = line.split("\t")
        N_values[i] = int(tokens[0])
        mutation_rates[i] = float(tokens[1])
        recombination_rates[i] = float(tokens[2])
        burn_in_files[i] = tokens[3]
        i += 1
    }
//initialise mutations? 


// Main simulation
main() {
    initialize()
    
    // Iterate through parameter combinations
    for (current_combination in 1:NUM_COMBINATIONS) {
        
        // Read burn-in population from file
        readFromPopulationFile(burn_in_files[current_combination])
        
        // Set parameters for current combination
        N = N_values[current_combination]
        mu = mutation_rates[current_combination]
        r = recombination_rates[current_combination]
        
        
        // Read burn-in population from file
        1 late() { sim.readFromPopulationFile(burn_in_files[current_combination])}
        //modify mutation to sweep
        1000:100000 late() {
 sweep = sim.mutationsOfType(m1)} //what kind of mutations do i want to sweep??
        
		100000 late() {
 		catn("TIME EXPIRED");
		sim.simulationFinished();
} 
        
    }
}


// Run selective sweep simulation for 10,000 generations
        //simulateSelectiveSweep(N, mu, r)